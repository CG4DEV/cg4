using System.Reflection;

namespace CG4.DataAccess.Poco
{
    /// <summary>
    /// Represents a mapping between a .NET class property and its corresponding database column.
    /// Contains metadata about property characteristics and database mapping configuration.
    /// </summary>
    public struct PropertyMap
    {
        /// <summary>
        /// Gets the name of the .NET property.
        /// </summary>
        public string Name { get; internal set; }

        /// <summary>
        /// Gets the name of the corresponding database column.
        /// May differ from the property name if specified by Column attribute.
        /// </summary>
        public string ColumnName { get; internal set; }

        /// <summary>
        /// Gets whether this property should be ignored during database operations.
        /// Properties marked with NotMapped attribute or certain attributes are ignored.
        /// </summary>
        public bool IsIgnored { get; internal set; }

        /// <summary>
        /// Gets whether this property can be modified in database operations.
        /// False for computed columns or identity columns.
        /// </summary>
        public bool AllowEdit { get; internal set; }

        /// <summary>
        /// Gets whether this property is an identity column in the database.
        /// Identity columns are automatically generated by the database.
        /// </summary>
        public bool IsIdentity { get; internal set; }

        /// <summary>
        /// Gets whether this property is part of the primary key.
        /// Can be set using Key attribute or by convention.
        /// </summary>
        public bool IsPrymaryKey { get; internal set; }

        /// <summary>
        /// Gets the reflection information for this property.
        /// Provides access to property metadata and allows property value manipulation.
        /// </summary>
        public PropertyInfo PropertyInfo { get; set; }
    }
}
